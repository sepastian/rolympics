import pyglet
import random
from rolympics import config
from rolympics import resources as res

class PhysicalObject(pyglet.sprite.Sprite):

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.vx, self.vy = 0.0, 0.0
        if isinstance(self.image, pyglet.image.Animation):
            self.w = self.image.get_max_width()
            self.h = self.image.get_max_height()
        else:
            self.w = self.image.width
            self.h = self.image.height

    def check_bounds(self):
        min_x = self.w // 2
        min_y = self.h // 2
        max_x = config.width - self.w // 2
        max_y = config.height - self.h // 2
        if self.x < min_x:
            self.x = max_x
        elif self.x > max_x:
            self.x = min_x
        if self.y < min_y:
            self.y = max_y
        elif self.y > max_y:
            self.y = min_y

    def collides_with(self, other):
        pass

    def resolve_collisions(self):
        for other in res.game_objects:
            pass

    def update(self, dt):
        #self.check_collisions()
        self.x += self.vx * dt
        self.y += self.vy * dt
        self.check_bounds()
